<#@ template language="C#" inherits="BaseGenerator" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	AddLicenseHeader();
#>
using System;
using System.Net;
using Amazon.Runtime;

namespace <#=this.Config.Namespace#>.Model
{
    ///<summary>
    /// <#= this.Config.BaseName#> exception
    /// </summary>
    public class <#=this.Exception.Name#> : Amazon<#=this.Config.BaseName#>Exception 
    {
        /// <summary>
        /// Constructs a new <#=this.Exception.Name#> with the specified error
        /// message.
        /// </summary>
        /// <param name="message">
        /// Describes the error encountered.
        /// </param>
        public <#=this.Exception.Name#>(string message) 
            : base(message) {}
          
        /// <summary>
        /// Construct instance of <#=this.Exception.Name#>
        /// </summary>
        /// <param name="message"></param>
        /// <param name="innerException"></param>
        public <#=this.Exception.Name#>(string message, Exception innerException) 
            : base(message, innerException) {}
            
        /// <summary>
        /// Construct instance of <#=this.Exception.Name#>
        /// </summary>
        /// <param name="innerException"></param>
        public <#=this.Exception.Name#>(Exception innerException) 
            : base(innerException) {}
            
        /// <summary>
        /// Construct instance of <#=this.Exception.Name#>
        /// </summary>
        /// <param name="message"></param>
        /// <param name="innerException"></param>
        /// <param name="errorType"></param>
        /// <param name="errorCode"></param>
        /// <param name="requestId"></param>
        /// <param name="statusCode"></param>
        public <#=this.Exception.Name#>(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode) 
            : base(message, innerException, errorType, errorCode, requestId, statusCode) {}

        /// <summary>
        /// Construct instance of <#=this.Exception.Name#>
        /// </summary>
        /// <param name="message"></param>
        /// <param name="errorType"></param>
        /// <param name="errorCode"></param>
        /// <param name="requestId"></param>
        /// <param name="statusCode"></param>
        public <#=this.Exception.Name#>(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode) 
            : base(message, errorType, errorCode, requestId, statusCode) {}

<#		
		if(this.GenerateComplexException)
		{
			foreach(var member in Exception.Structure.Members)
			{
				if(member.PropertyName.Equals("Message")) continue;
#>
        /// <summary>
        /// Gets and sets the <#=member.PropertyName#> property.
        /// </summary>
		public <#=member.DetermineType()#> <#=member.PropertyName#> { get; set; }

<#
			}
		}
#>
    }
}

<#+
    public ExceptionModel Exception { get; set; }

	public bool GenerateComplexException { get; set; }
#>