/*
 * Copyright 2010-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the swf-2012-01-25.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Text;
using System.IO;

using Amazon.Runtime;
using Amazon.Runtime.Internal;

namespace Amazon.SimpleWorkflow.Model
{
    /// <summary>
    /// Container for the parameters to the RecordActivityTaskHeartbeat operation.
    /// Used by activity workers to report to the service that the <a>ActivityTask</a> represented
    /// by the specified <code>taskToken</code> is still making progress. The worker can also
    /// (optionally) specify details of the progress, for example percent complete, using
    /// the <code>details</code> parameter. This action can also be used by the worker as
    /// a mechanism to check if cancellation is being requested for the activity task. If
    /// a cancellation is being attempted for the specified task, then the boolean <code>cancelRequested</code>
    /// flag returned by the service is set to <code>true</code>.
    /// 
    ///  
    /// <para>
    /// This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
    /// is specified in <a>RegisterActivityType</a>.
    /// </para>
    ///  
    /// <para>
    /// This action does not in itself create an event in the workflow execution history.
    /// However, if the task times out, the workflow execution history will contain a <code>ActivityTaskTimedOut</code>
    /// event that contains the information from the last heartbeat generated by the activity
    /// worker.
    /// </para>
    ///  <note>The <code>taskStartToCloseTimeout</code> of an activity type is the maximum
    /// duration of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
    /// requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.</note>
    /// <note>This operation is only useful for long-lived activities to report liveliness
    /// of the task and to determine if a cancellation is being attempted. </note> <important>If
    /// the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation is
    /// being attempted. If the worker can cancel the activity, it should respond with <a>RespondActivityTaskCanceled</a>.
    /// Otherwise, it should ignore the cancellation request.</important> 
    /// <para>
    /// <b>Access Control</b>
    /// </para>
    ///  
    /// <para>
    /// You can use IAM policies to control this action's access to Amazon SWF resources as
    /// follows:
    /// </para>
    ///  <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action
    /// to only specified domains.</li> <li>Use an <code>Action</code> element to allow or
    /// deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain
    /// this action's parameters.</li> </ul> 
    /// <para>
    /// If the caller does not have sufficient permissions to invoke the action, or the parameter
    /// values fall outside the specified constraints, the action fails. The associated event
    /// attribute's <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details
    /// and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
    /// IAM to Manage Access to Amazon SWF Workflows</a>.
    /// </para>
    /// </summary>
    public partial class RecordActivityTaskHeartbeatRequest : AmazonSimpleWorkflowRequest
    {
        private string _details;
        private string _taskToken;

        /// <summary>
        /// Gets and sets the property Details. 
        /// <para>
        /// If specified, contains details about the progress of the task.
        /// </para>
        /// </summary>
        public string Details
        {
            get { return this._details; }
            set { this._details = value; }
        }

        // Check to see if Details property is set
        internal bool IsSetDetails()
        {
            return this._details != null;
        }

        /// <summary>
        /// Gets and sets the property TaskToken. 
        /// <para>
        /// The <code>taskToken</code> of the <a>ActivityTask</a>.
        /// </para>
        ///  <important> <code>taskToken</code> is generated by the service and should be treated
        /// as an opaque value. If the task is passed to another process, its <code>taskToken</code>
        /// must also be passed. This enables it to provide its progress and respond with results.
        /// </important>
        /// </summary>
        public string TaskToken
        {
            get { return this._taskToken; }
            set { this._taskToken = value; }
        }

        // Check to see if TaskToken property is set
        internal bool IsSetTaskToken()
        {
            return this._taskToken != null;
        }

    }
}